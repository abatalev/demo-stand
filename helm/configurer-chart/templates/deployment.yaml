apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: configurer
  name: configurer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: configurer
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/actuator/prometheus'
        prometheus.io/port: '8080'
      labels:
        app: configurer
    spec:
      containers:
        - name: configurer
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            requests:
              cpu: 10m
              memory: 256Mi
      restartPolicy: Always
